// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni mod vendor crd -f https://doc.crds.dev/raw/github.com/crossplane/crossplane@v1.19.1

package v1beta1

import "strings"

// A ProviderConfig configures a Helm 'provider', i.e. a
// connection to a particular
#ProviderConfig: {
	// APIVersion defines the versioned schema of this representation
	// of an object. Servers should convert recognized schemas to the
	// latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "helm.crossplane.io/v1beta1"

	// Kind is a string value representing the REST resource this
	// object represents. Servers may infer this from the endpoint
	// the client submits requests to. Cannot be updated. In
	// CamelCase. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "ProviderConfig"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace?: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// A ProviderConfigSpec defines the desired state of a Provider.
	spec!: #ProviderConfigSpec
}

// A ProviderConfigSpec defines the desired state of a Provider.
#ProviderConfigSpec: {
	// Credentials used to connect to the Kubernetes API. Typically a
	// kubeconfig file. Use InjectedIdentity for in-cluster config.
	credentials!: {
		env?: {
			// Name is the name of an environment variable.
			name!: string
		}
		fs?: {
			// Path is a filesystem path.
			path!: string
		}

		// A SecretRef is a reference to a secret key that contains the
		// credentials that must be used to connect to the provider.
		secretRef?: {
			// The key to select.
			key!: string

			// Name of the secret.
			name!: string

			// Namespace of the secret.
			namespace!: string
		}

		// Source of the provider credentials.
		source!: "None" | "Secret" | "InjectedIdentity" | "Environment" | "Filesystem"
	}

	// Identity used to authenticate to the Kubernetes API. The
	// identity credentials can be used to supplement kubeconfig
	// 'credentials', for example by configuring a bearer token
	// source such as OAuth.
	identity?: {
		env?: {
			// Name is the name of an environment variable.
			name!: string
		}
		fs?: {
			// Path is a filesystem path.
			path!: string
		}

		// A SecretRef is a reference to a secret key that contains the
		// credentials that must be used to connect to the provider.
		secretRef?: {
			// The key to select.
			key!: string

			// Name of the secret.
			name!: string

			// Namespace of the secret.
			namespace!: string
		}

		// Source of the provider credentials.
		source!: "None" | "Secret" | "InjectedIdentity" | "Environment" | "Filesystem"

		// Type of identity.
		type!: "GoogleApplicationCredentials"
	}
}
